name: Create release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Create release
    runs-on: ubuntu-latest

    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      NPM_PACKAGE_VERSION: ${GITHUB_REF_NAME/v/}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          registry-url: https://registry.npmjs.org/

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Run linting
        run: npm run lint

      - name: Run tests
        run: npm test --ignore-scripts

      - name: Create release artifact
        run: npm run release --workspace nhsuk-frontend

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: ${{ contains(env.NPM_PACKAGE_VERSION, '-') }}

      - name: Upload release asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/nhsuk-frontend-${{ env.NPM_PACKAGE_VERSION }}.zip
          asset_name: nhsuk-frontend-${{ env.NPM_PACKAGE_VERSION }}.zip
          asset_content_type: application/zip

      - name: Publish npm package
        if: ${{ !contains(env.NPM_PACKAGE_VERSION, '-') }}
        run: npm publish --dry-run --workspace nhsuk-frontend --tag latest
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

      - name: Publish npm package (pre-release)
        if: ${{ contains(env.NPM_PACKAGE_VERSION, '-') }}
        run: npm publish --dry-run --workspace nhsuk-frontend --tag next
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
